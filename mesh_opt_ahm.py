from dolfin import *
from mshr import *
import random
import time

def Generate_Mesh(L = 1, H = 1, R = 0.1, res = 100, eps = 1.0):
	# Create mesh
    
	## Parameters of an in-line tube bundle
	
	def segments(R):
	    C = 2*3.14*R
	    const_for_h_find = 1.0
	    hstep = const_for_h_find/res
	    seg = int(C/hstep)
	    if(seg<3): return 3
	    else: return seg 
	
	domain = Rectangle(Point(0.0, 0.0), Point(L, H))
	
	hix = eps/2.
	hiy = eps/2.
	while(hiy<H):
	    while(hix<L):
	        circ = Circle(Point(hix, hiy), R*eps, segments(R*eps))
	        domain = domain - circ
	        hix+=eps
	    hix=eps/2.
	    hiy+=eps
	        
	time_e = time.time()
	print( "Geometry generated by " + str(time_e-time_c) + " seconds." + "\n" + "Starting generate mesh...")
	#exit()
	mesh = generate_mesh(domain, float(res))
	info(mesh)
	return mesh


time_c = time.time()



L = 1.0            # lenght of domain
H = 1.0             # height of domain
R = 0.3             # radius
res = 35           # grid resolution
eps = 1        # epsilon


time1 = time.time()
mesh = Generate_Mesh(L, H, R, res, eps)
#mesh = Generate_Mesh()
time2 = time.time()
# Check generated mesh
plot(mesh, title = "Mesh")
print( "Mesh generated by " + str(time2-time1) + " seconds.")
File("mesh.xml") << mesh
File("mesh.pvd") << mesh
interactive()
